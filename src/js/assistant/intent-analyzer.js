class IntentAnalyzer {
    constructor(client = null) {
        this.client = client
        this.systemPrompt = this.buildSystemPrompt()
    }

    buildSystemPrompt() {
        return `–¢—ã - AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ERGO MS. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–Ω–∏–º–∞—Ç—å –Ω–∞–º–µ—Ä–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–º–æ–≥–∞—Ç—å —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º—ã.

–î–û–°–¢–£–ü–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:
1. NAVIGATION - –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º (–∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç "–ø–µ—Ä–µ–π–¥–∏", "–æ—Ç–∫—Ä–æ–π")
2. COMPONENT_EXPLAIN - –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ù–ê –¢–ï–ö–£–©–ï–ô —Å—Ç—Ä–∞–Ω–∏—Ü–µ (—Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —è–≤–Ω–æ –ø—Ä–æ—Å—è—Ç "–æ–±—ä—è—Å–Ω–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã", "–ø–æ–∫–∞–∂–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã")
3. PAGE_ANALYZE - –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–∫–æ–≥–¥–∞ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç "–≥–¥–µ —è", "—á—Ç–æ —ç—Ç–æ –∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞")  
4. HELP - –æ–±—â–∞—è —Å–ø—Ä–∞–≤–∫–∞ (—Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —è–≤–Ω–æ –ø—Ä–æ—Å—è—Ç "–ø–æ–º–æ—â—å", "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å", "–∫–æ–º–∞–Ω–¥—ã")
5. CHAT - –æ–±—ã—á–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã

–í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê –î–õ–Ø –ù–ê–í–ò–ì–ê–¶–ò–ò:
- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –°–ï–ú–ê–ù–¢–ò–ö–£ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –ò—Å–ø–æ–ª—å–∑—É–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
- –î–ª—è "–ø—Ä–æ—Ñ–∏–ª—å", "–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", "–∞–∫–∫–∞—É–Ω—Ç" –≤—ã–±–∏—Ä–∞–π Account (/user/account)
- –î–ª—è "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏" –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏—è –≤—ã–±–∏—Ä–∞–π Settings (/settings)
- –î–ª—è "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" –≤—ã–±–∏—Ä–∞–π SecuritySettings (/user/security)
- –î–ª—è "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏" –≤—ã–±–∏—Ä–∞–π UsersPanel
- –í–æ–∑–≤—Ä–∞—â–∞–π –¢–û–ß–ù–û–ï –∏–º—è –º–∞—Ä—à—Ä—É—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö

–í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê:
- –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- CHAT –∏—Å–ø–æ–ª—å–∑—É–π –¥–ª—è –í–°–ï–• —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: "–∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å", "–∫–∞–∫ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å", "—á—Ç–æ —Ç–∞–∫–æ–µ", drag and drop, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
- COMPONENT_EXPLAIN –∏—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –∫–æ–≥–¥–∞ –ø—Ä–æ—Å—è—Ç –æ–±—ä—è—Å–Ω–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–º–µ–Ω–Ω–æ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
- HELP –∏—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–ø—Ä–∞–≤–∫–∏ –æ —Å–∞–º–æ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–µ
- –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º
- –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–¢—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –°–¢–†–û–ì–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
{
  "intent": "NAVIGATION|COMPONENT_EXPLAIN|PAGE_ANALYZE|HELP|CHAT",
  "action": "–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ",
  "message": "–æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
  "params": {–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ}
}

–í–ù–ò–ú–ê–ù–ò–ï: –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û JSON, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–æ –∏–ª–∏ –ø–æ—Å–ª–µ!

–ü–†–ò–ú–ï–†–´:
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "–ü–µ—Ä–µ–π–¥–∏ –≤ –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç: Account: /user/account - –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ—Ñ–∏–ª—å
–û—Ç–≤–µ—Ç: {"intent":"NAVIGATION","action":"go_to_profile","message":"–ü–µ—Ä–µ—Ö–æ–∂—É –≤ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å","params":{"route":"Account","routeName":"–ø—Ä–æ—Ñ–∏–ª—å"}}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "–û—Ç–∫—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç: Settings: /settings - –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–û—Ç–≤–µ—Ç: {"intent":"NAVIGATION","action":"go_to_settings","message":"–û—Ç–∫—Ä—ã–≤–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã","params":{"route":"Settings","routeName":"–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"}}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "–ì–¥–µ —è –Ω–∞—Ö–æ–∂—É—Å—å?"  
–û—Ç–≤–µ—Ç: {"intent":"PAGE_ANALYZE","action":"analyze_current_page","message":"–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –≤–∞—Å","params":{}}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "–û–±—ä—è—Å–Ω–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
–û—Ç–≤–µ—Ç: {"intent":"COMPONENT_EXPLAIN","action":"explain_component","message":"–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã","params":{}}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "–ü–æ–º–æ—â—å"
–û—Ç–≤–µ—Ç: {"intent":"HELP","action":"show_help","message":"–ü–æ–∫–∞–∑—ã–≤–∞—é —Å–ø—Ä–∞–≤–∫—É –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞","params":{}}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "–ö–∞–∫ –º–Ω–µ —Å–¥–µ–ª–∞—Ç—å dnd –Ω–∞ –º–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ bi?"
–û—Ç–≤–µ—Ç: {"intent":"CHAT","action":null,"message":"–î–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ drag and drop –Ω–∞ BI —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Vue Draggable –∏–ª–∏ SortableJS. –≠—Ç–æ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞—Ç—å?","params":{}}`
    }

    async analyzeIntent(userMessage, context = {}) {
        try {
            const systemPrompt = this.buildSystemPrompt()
            const contextPrompt = await this.buildContextPrompt(context)
            const userPrompt = `${contextPrompt}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "${userMessage}"`

            console.log('üîç –ó–∞–ø—Ä–æ—Å –≤ LM Studio...', {
                model: this.client.model,
                userMessage: userMessage.substring(0, 50) + '...'
            })

            const response = await this.client.sendMessage(systemPrompt, userPrompt)

            if (response && response.trim()) {
                console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç LM Studio:', response.substring(0, 100) + '...')

                try {
                    const parsed = JSON.parse(response.trim())
                    console.log('‚úÖ LLM —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞–ø—Ä–æ—Å:', parsed.intent)
                    return parsed
                } catch (parseError) {
                    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç LLM:', parseError)
                    console.log('üìù –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:', response)
                    return this.fallbackAnalysis(userMessage, response)
                }
            } else {
                console.warn('‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç LM Studio')
                return this.fallbackAnalysis(userMessage, null)
            }

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–π:', error)
            return this.fallbackAnalysis(userMessage, null)
        }
    }

    async buildContextPrompt(context) {
        const prompt = []

        if (context.currentRoute) {
            prompt.push(`–¢–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç: ${context.currentRoute}`)
        }

        if (context.currentPage) {
            prompt.push(`–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${context.currentPage}`)
        }

        if (context.availableRoutes && context.availableRoutes.length > 0) {
            prompt.push(`–î–û–°–¢–£–ü–ù–´–ï –ú–ê–†–®–†–£–¢–´ (name: path):`)

            const routeDescriptions = await this.getRouteDescriptions(context.availableRoutes)
            context.availableRoutes.forEach(routeName => {
                const routeInfo = routeDescriptions[routeName] || `–ú–∞—Ä—à—Ä—É—Ç ${routeName}`
                prompt.push(`- ${routeName}: ${routeInfo}`)
            })
        }

        if (context.pageComponents && context.pageComponents.length > 0) {
            prompt.push(`–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${context.pageComponents.join(', ')}`)
        }

        return prompt.join('\n')
    }

    async getRouteDescriptions(routeNames) {
        try {
            const response = await fetch('/api/cms/get-routes-paths/')
            const data = await response.json()

            if (data.routes && Array.isArray(data.routes)) {
                const descriptions = {}
                data.routes.forEach(route => {
                    if (routeNames.includes(route.name)) {
                        descriptions[route.name] = `${route.path} - ${route.title}`
                    }
                })

                routeNames.forEach(routeName => {
                    if (!descriptions[routeName]) {
                        descriptions[routeName] = this.getFallbackDescription(routeName)
                    }
                })

                return descriptions
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç–æ–≤:', error)
        }

        const fallbackDescriptions = {}
        routeNames.forEach(routeName => {
            fallbackDescriptions[routeName] = this.getFallbackDescription(routeName)
        })

        return fallbackDescriptions
    }

    getFallbackDescription(routeName) {
        const routeDescriptions = {
            'Account': '/user/account - –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ—Ñ–∏–ª—å',
            'SecuritySettings': '/user/security - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
            'Settings': '/settings - –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            'UsersPanel': '/admin-panel/users - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏',
            'AdminPanel': '/admin-panel - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Å–∏—Å—Ç–µ–º—ã',
            'GroupsPanel': '/admin-panel/groups - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
            'CategoriesPanel': '/admin-panel/categories - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏',
            'BI': '/bi - –ú–æ–¥—É–ª—å –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
            'CRM': '/crm - CRM —Å–∏—Å—Ç–µ–º–∞',
            'LMS': '/lms - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏–µ–º',
            'ExpertSystem': '/expert-system - –≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞',
            'Profile': '/expert-system/account - –ü—Ä–æ—Ñ–∏–ª—å –≤ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ',
            'ProfilePage': '/education_analytics/profile - –ü—Ä–æ—Ñ–∏–ª—å –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
            'DatabaseAnalyze': '/user/analyze/databaseanalyze - –ê–Ω–∞–ª–∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
            'Analyze': '/user/analyze - –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö'
        }

        return routeDescriptions[routeName] || `–ú–∞—Ä—à—Ä—É—Ç ${routeName}`
    }

    fallbackAnalysis(userMessage, llmResponse) {
        const intent = this.detectIntentLocally(userMessage)

        return {
            success: true,
            intent: intent.type,
            action: intent.action,
            message: llmResponse || intent.defaultMessage,
            params: intent.params
        }
    }

    localIntentAnalysis(userMessage) {
        const intent = this.detectIntentLocally(userMessage)

        return {
            success: true,
            intent: intent.type,
            action: intent.action,
            message: intent.defaultMessage,
            params: intent.params
        }
    }

    detectIntentLocally(message) {
        const lowerMessage = message.toLowerCase()

        if (this.matchesKeywords(lowerMessage, ['–ø–µ—Ä–µ–π–¥–∏', '–ø–µ—Ä–µ—Ö–æ–¥', '–æ—Ç–∫—Ä–æ–π', '–∏–¥–∏', '–ø–µ—Ä–µ–π—Ç–∏', '–ø–æ–∫–∞–∂–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É'])) {
            let route = 'Account'
            let routeName = '–ø—Ä–æ—Ñ–∏–ª—å'

            if (this.matchesKeywords(lowerMessage, ['–ø—Ä–æ—Ñ–∏–ª—å', 'profile', '–∞–∫–∫–∞—É–Ω—Ç', 'account', '–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'])) {
                route = 'Account'
                routeName = '–ø—Ä–æ—Ñ–∏–ª—å'
            } else if (this.matchesKeywords(lowerMessage, ['–Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 'settings']) && !this.matchesKeywords(lowerMessage, ['–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', 'security'])) {
                route = 'Settings'
                routeName = '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã'
            } else if (this.matchesKeywords(lowerMessage, ['–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', '–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', 'security'])) {
                route = 'SecuritySettings'
                routeName = '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'
            } else if (this.matchesKeywords(lowerMessage, ['–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'users']) || (this.matchesKeywords(lowerMessage, ['–∞–¥–º–∏–Ω', 'admin']) && this.matchesKeywords(lowerMessage, ['–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'users']))) {
                route = 'UsersPanel'
                routeName = '–ø–∞–Ω–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
            } else if (this.matchesKeywords(lowerMessage, ['–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å', 'admin panel']) && !this.matchesKeywords(lowerMessage, ['–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', '–≥—Ä—É–ø–ø—ã', '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏'])) {
                route = 'AdminPanel'
                routeName = '–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å'
            } else if (this.matchesKeywords(lowerMessage, ['–≥—Ä—É–ø–ø—ã', 'groups'])) {
                route = 'GroupsPanel'
                routeName = '–ø–∞–Ω–µ–ª—å –≥—Ä—É–ø–ø'
            } else if (this.matchesKeywords(lowerMessage, ['–∫–∞—Ç–µ–≥–æ—Ä–∏–∏', 'categories'])) {
                route = 'CategoriesPanel'
                routeName = '–ø–∞–Ω–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π'
            }

            return {
                type: 'NAVIGATION',
                action: 'navigate_to_route',
                defaultMessage: `–ü–µ—Ä–µ—Ö–æ–∂—É –≤ ${routeName}`,
                params: { route, routeName }
            }
        }

        if (this.matchesStartOfMessage(lowerMessage, ['–≥–¥–µ —è', '–≥–¥–µ —è –Ω–∞—Ö–æ–∂—É—Å—å', '—á—Ç–æ —ç—Ç–æ –∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞', '–∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã'])) {
            return {
                type: 'PAGE_ANALYZE',
                action: 'analyze_current_page',
                defaultMessage: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –µ–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã',
                params: {}
            }
        }

        if (this.matchesStartOfMessage(lowerMessage, ['–æ–±—ä—è—Å–Ω–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã', '–ø–æ–∫–∞–∂–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã', '–∫–∞–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–¥–µ—Å—å', '–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ'])) {
            return {
                type: 'COMPONENT_EXPLAIN',
                action: 'explain_component',
                defaultMessage: '–û–±—ä—è—Å–Ω—è—é –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ',
                params: {}
            }
        }

        if (this.matchesStartOfMessage(lowerMessage, ['–ø–æ–º–æ—â—å', 'help', '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å', '–∫–æ–º–∞–Ω–¥—ã', '—Å–ø—Ä–∞–≤–∫–∞'])) {
            return {
                type: 'HELP',
                action: 'show_help',
                defaultMessage: '–ü–æ–∫–∞–∑—ã–≤–∞—é —Å–ø—Ä–∞–≤–∫—É –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞',
                params: {}
            }
        }

        return {
            type: 'CHAT',
            action: null,
            defaultMessage: this.generateChatResponse(lowerMessage),
            params: {}
        }
    }

    generateChatResponse(message) {
        if (message.includes('drag') && message.includes('drop') || message.includes('dnd')) {
            return '–î–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ drag and drop –≤ Vue —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n\n1. **Vue Draggable** - npm install vuedraggable\n2. **SortableJS** - npm install sortablejs\n3. **HTML5 Drag API** - –Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥\n\n–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞—Ç—å?'
        }

        if (message.includes('–∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å') || message.includes('–∫–∞–∫ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å')) {
            return '–ü–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π. –û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.'
        }

        return '–ü–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π, —Å–∫–∞–∂–∏—Ç–µ "–ø–µ—Ä–µ–π–¥–∏ –≤..." –∏–ª–∏ —Å–ø—Ä–æ—Å–∏—Ç–µ –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.'
    }

    matchesKeywords(message, keywords) {
        return keywords.some(keyword => message.includes(keyword))
    }

    matchesStartOfMessage(message, phrases) {
        return phrases.some(phrase => message.startsWith(phrase) || message.includes(phrase + ' ') || message === phrase)
    }
}

export const intentAnalyzer = new IntentAnalyzer()
export default IntentAnalyzer 